buildscript {
	repositories {
		maven {
			url "https://plugins.gradle.org/m2/"
		}
	}
	dependencies {
		classpath('com.querydsl:querydsl-apt')
	}
}

plugins {
	id 'org.springframework.boot' version '2.3.1.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
	id 'idea'


}
group = 'com.myking520.doraemon'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenLocal()

	maven { url 'http://maven.aliyun.com/nexus/content/repositories/central/' }

	mavenCentral()
}

ext {
	set('springCloudVersion', "Hoxton.SR4")
}
idea {
	module {
		sourceDirs += file("$projectDir/out/production/classes/generated")
	}
}
dependencies {
	implementation 'org.springframework.cloud:spring-cloud-starter'
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.boot:spring-boot-devtools')
	compile('mysql:mysql-connector-java')
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('ma.glasnost.orika:orika-core:1.5.4')
	compile('com.github.xiaoymin:knife4j-spring-boot-starter:2.0.3')
	compile('com.querydsl:querydsl-jpa')
	compile('com.querydsl:querydsl-apt')
//	annotationProcessor('com.querydsl:querydsl-apt')
	annotationProcessor('org.springframework.boot:spring-boot-starter-data-jpa')
	annotationProcessor('com.querydsl:querydsl-jpa')
	annotationProcessor('com.querydsl:querydsl-apt')


//	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.1.2'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}

}
idea {
	module {
		sourceDirs += file('src/main/generated')
		testSourceDirs += file('src/test/generated')
	}
}
compileJava {
	file('/src/main/generated').mkdirs()
	options.compilerArgs << '-processor' << 'com.querydsl.apt.jpa.JPAAnnotationProcessor' << '-s' << file('src/main/generated').absolutePath
}
compileTestJava {
	file('/src/test/generated').mkdirs()
	options.compilerArgs << '-processor' << 'com.querydsl.apt.jpa.JPAAnnotationProcessor' << '-s' << file('src/main/generated').absolutePath
}
clean{
	delete '/src/main/generated'
	delete '/src/test/generated'
}

//compileJava.dependsOn generateQueryDSL

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

test {
	useJUnitPlatform()
}
